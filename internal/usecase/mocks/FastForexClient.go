// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"
	api "exchange-rate-calculator/internal/adapter/api"

	mock "github.com/stretchr/testify/mock"
)

// FastForexClient is an autogenerated mock type for the FastForexClient type
type FastForexClient struct {
	mock.Mock
}

// GetRates provides a mock function with given fields: ctx, baseCurrency, symbol
func (_m *FastForexClient) GetRates(ctx context.Context, baseCurrency string, symbol string) (*api.FetchOneResponse, error) {
	ret := _m.Called(ctx, baseCurrency, symbol)

	if len(ret) == 0 {
		panic("no return value specified for GetRates")
	}

	var r0 *api.FetchOneResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (*api.FetchOneResponse, error)); ok {
		return rf(ctx, baseCurrency, symbol)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *api.FetchOneResponse); ok {
		r0 = rf(ctx, baseCurrency, symbol)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*api.FetchOneResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, baseCurrency, symbol)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFastForexClient creates a new instance of FastForexClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFastForexClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *FastForexClient {
	mock := &FastForexClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
